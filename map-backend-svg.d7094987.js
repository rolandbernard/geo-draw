"use strict";(self.webpackChunkgeo_draw=self.webpackChunkgeo_draw||[]).push([[968],{971:(t,n,o)=>{o.r(n);var e,a,r,i,c=o(168),s=o(982),u=o(671),l=o(144),h=o(340),d=o(215),p=o(120),m=o(392),f=o(959),v=o(293);var g=function(t){(0,h.Z)(y,t);var n,o,g=(n=y,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=(0,p.Z)(n);if(o){var a=(0,p.Z)(this).constructor;t=Reflect.construct(e,arguments,a)}else t=e.apply(this,arguments);return(0,d.Z)(this,t)});function y(){var t;return(0,u.Z)(this,y),(t=g.call(this)).zoom_scale=1,t.zoom_center=[0,0],t}return(0,l.Z)(y,[{key:"center",get:function(){return this.zoom_center}},{key:"scale",get:function(){return this.zoom_scale}},{key:"setCenterAndScale",value:function(t,n){this.zoom_center=t,this.zoom_scale=n,this.shadowRoot.getElementById("map").style.transform="scale(".concat(this.zoom_scale,") translate(").concat(-this.zoom_center[0],"%,").concat(-this.zoom_center[1],"%)")}},{key:"clientPosToMapPos",value:function(t){var n=this.shadowRoot.getElementById("map").getBoundingClientRect();return[(t[0]-n.x-n.width/2)/n.width*100,(t[1]-n.y-n.height/2)/n.height*100]}},{key:"handleMouseMove",value:function(t){var n,o,e=t.target,a=e;if("path"===(null===(n=a)||void 0===n?void 0:n.tagName)&&(a=a.parentNode),null!==(o=a)&&void 0!==o&&o.location_data){var r,i=null===(r=a)||void 0===r?void 0:r.location_data,c=e.getBoundingClientRect(),s=[c.x+c.width/2,c.y+c.height/2],u=new Event("hover");u.location=i,u.position=s,this.dispatchEvent(u)}else{var l=new Event("hover");l.location=null,l.position=null,this.dispatchEvent(l)}}},{key:"handleMouseOut",value:function(){var t=new Event("hover");t.location=null,t.position=null,this.dispatchEvent(t)}},{key:"handleTouchStart",value:function(t){1===t.touches.length?this.handleMouseMove(t):this.handleMouseOut(t)}},{key:"updated",value:function(){var t=this;window.requestAnimationFrame((function n(){var o=t.shadowRoot.getElementById("map");o?window.requestAnimationFrame((function(){window.requestAnimationFrame((function(){o.style.transform="scale(".concat(t.zoom_scale,") translate(").concat(-t.zoom_center[0],"%,").concat(-t.zoom_center[1],"%)"),o.style.opacity=1}))})):window.requestAnimationFrame(n)}))}},{key:"svgPathForPolygon",value:function(t,n,o,e){for(var a=t.vertex,r=[0].concat((0,s.Z)(t.holes),[a.length/2]),i=[],c=0;c<r.length-1;c++){for(var u=[],l=[NaN,NaN],h=r[c];h<r[c+1];h++){var d=[Math.round((0,v.U)(a[2*h],n[0],n[0]+o,0,e)).toString(),Math.round((0,v.U)(a[2*h+1],n[1],n[1]+o,0,e)).toString()];d[0]==l[0]&&d[1]==l[1]||(u.push(h==r[c]?" M":" L"),u.push(d[0]+","+d[1]),l=d)}i.push.apply(i,u),i.push(" z ")}return i.join("")}},{key:"render",value:function(){var t=this;this.locations.forEach((function(t){!t||t.proj_min&&t.proj_max||(t.proj_min=t.raw.proj_min,t.proj_max=t.raw.proj_max)}));var n=this.locations.filter((function(t){return t})).map((function(t){return t.proj_min})).reduce((function(t,n){return[Math.min(t[0],n[0]),Math.min(t[1],n[1])]})),o=this.locations.filter((function(t){return t})).map((function(t){return t.proj_max})).reduce((function(t,n){return[Math.max(t[0],n[0]),Math.max(t[1],n[1])]})),i=Math.max(o[0]-n[0],o[1]-n[1]),u=5*Math.max(window.innerWidth,window.innerHeight);return this.locations.forEach((function(o){o&&(o.proj_polygons||(o.proj_polygons=(0,s.Z)(Array(o.raw.count_polygons()).keys()).map((function(t){return o.raw.get_proj_polygon(t)}))),o.svg=o.proj_polygons.map((function(o){return(0,m.YP)(e||(e=(0,c.Z)(['<path d="','"/>'])),t.svgPathForPolygon(o,n,i,u))})))})),(0,m.dy)(a||(a=(0,c.Z)(['\n            <svg\n                id="map"\n                viewBox="','"\n                @mousemove="','"\n                @wheel="','"\n                @mouseout="','"\n                @touchstart="','"\n                @touchmove="','"\n            >\n                ',"\n            </svg>\n        "])),Math.round((0,v.U)(n[0],n[0],n[0]+i,0,u))+" "+Math.round((0,v.U)(n[1],n[1],n[1]+i,0,u))+" "+Math.round((0,v.U)(o[0],n[0],n[0]+i,0,u))+" "+Math.round((0,v.U)(o[1],n[1],n[1]+i,0,u)),this.handleMouseMove,this.handleMouseMove,this.handleMouseOut,this.handleTouchStart,this.handleTouchStart,this.locations.map((function(t){return(0,m.YP)(r||(r=(0,c.Z)(['\n                    <g\n                        class="geometry"\n                        style="','"\n                        .location_data="','"\n                    >\n                        ',"\n                    </g>\n                "])),(0,f.V)({fill:"rgb(".concat(t.color[0],",").concat(t.color[1],",").concat(t.color[2],")")}),t,null==t?void 0:t.svg)})))}}],[{key:"properties",get:function(){return{locations:{type:Array}}}},{key:"styles",get:function(){return(0,m.iv)(i||(i=(0,c.Z)(["\n            :host {\n                width: 100%;\n                height: 100%;\n                position: relative;\n                display: block;\n            }\n            #map {\n                width: 100%;\n                height: 100%;\n                max-width: 100%;\n                max-height: 100%;\n                transform: scale(5);\n                opacity: 0.001;\n                will-change: transform, opacity;\n                stroke: var(--background-darkish);\n                stroke-width: 0.125%;\n                stroke-linejoin: round;\n                paint-order: stroke fill;\n                display: block;\n                position: absolute;\n            }\n            svg#map g:hover {\n                fill-opacity: 0.75;\n            }\n        "])))}}]),y}(m.oi);customElements.define("map-backend",g)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,