(self.webpackChunkgeo_draw=self.webpackChunkgeo_draw||[]).push([[466],{726:()=>{},466:(n,e,t)=>{"use strict";var o,a,r,i,l,s,c,d,u,h,p,f,m,v,g,y,b,x=t(861),w=t(168),k=t(942),M=t(671),Z=t(144),_=t(340),P=t(215),C=t(120),E=t(757),R=t.n(E),D=t(392),O=t(959),j=t(458),B=t(845),S=(t(129),t(293)),Y=t(726);function T(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function L(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?T(Object(t),!0).forEach((function(e){(0,k.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):T(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}(0,S.C)()?t.e(238).then(t.bind(t,964)):t.e(968).then(t.bind(t,971));var I={},X=function(n){(0,_.Z)(E,n);var e,t,k=(e=E,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,o=(0,C.Z)(e);if(t){var a=(0,C.Z)(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return(0,P.Z)(this,n)});function E(){var n;return(0,M.Z)(this,E),(n=k.call(this)).render3d=!1,n.details=!0,n}return(0,Z.Z)(E,[{key:"handleLocationHover",value:function(n){if(this.details){var e=this.shadowRoot.getElementById("info-box-wrapper");if(n.location&&n.position){var t=this.shadowRoot.getElementById("info-box-name"),o=this.shadowRoot.getElementById("map-wrapper");t.innerText=n.location.name.split(",")[0],Array.from(e.getElementsByClassName("info-field-value")).forEach((function(e,t){e.innerText=(Math.round(100*n.location.data[t])/100).toLocaleString()}));var a=o.getBoundingClientRect(),r=n.position[0]-a.x,i=n.position[1]-a.y,l=Math.min(Math.max(l,0),a.height);e.style.setProperty("--anchor-point",r/a.width*90+5+"%"),e.style.setProperty("--anchor-at-bottom",l>1.2*(e.clientHeight+12)?1:0),e.style.left=r+"px",e.style.top=i+"px",e.classList.add("visible");var s=e.getBoundingClientRect();s.x<4?(r=Math.max(r,8.5),i=Math.min(Math.max(i,.1*s.height),a.height-.1*s.height),e.style.setProperty("--anchor-point","0%"),e.style.setProperty("--anchor-at-bottom",i/a.height*.8+.1)):s.x+s.width+4>a.x+a.width?(r=Math.min(r,a.width-8.5),i=Math.min(Math.max(i,.1*s.height),a.height-.1*s.height),e.style.setProperty("--anchor-point","100%"),e.style.setProperty("--anchor-at-bottom",i/a.height*.8+.1)):(i=Math.min(Math.max(i,0),a.height),e.style.setProperty("--anchor-point",r/a.width*90+5+"%"),e.style.setProperty("--anchor-at-bottom",i>1.2*(s.height+12)?1:0)),e.style.left=r+"px",e.style.top=i+"px",e.current_location=location}else{var c=this.shadowRoot.getElementById("info-box-wrapper");c.classList.remove("visible"),c.current_location=null}}}},{key:"handleScroll",value:function(n){if(n.preventDefault(),0!=n.deltaY){var e=this.shadowRoot.getElementById("map-backend"),t=e.scale;n.deltaY<0?t*=Math.pow(1.001,-n.deltaY):t*=Math.pow(.999,n.deltaY);var o=(t=Math.min(Math.max(.5,t),30))/e.scale,a=e.center,r=e.clientPosToMapPos([n.clientX,n.clientY]),i=[(r[0]-a[0])*(1-1/o),(r[1]-a[1])*(1-1/o)],l=[a[0]+i[0],a[1]+i[1]];e.setCenterAndScale(l,t)}}},{key:"handleDragStart",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-wrapper");this.last_drag_pos=[n.clientX,n.clientY],e.onmouseup=this.handleDragEnd.bind(this),e.onmouseleave=this.handleDragEnd.bind(this),e.onmousemove=this.handleDragMove.bind(this),e.style.cursor="grabbing"}},{key:"handleDragMove",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-backend"),t=e.clientPosToMapPos(this.last_drag_pos);this.last_drag_pos=[n.clientX,n.clientY];var o=e.clientPosToMapPos([n.clientX,n.clientY]),a=[o[0]-t[0],o[1]-t[1]],r=[e.center[0]-a[0],e.center[1]-a[1]];e.setCenterAndScale(r,e.scale)}},{key:"handleDragEnd",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-wrapper");e.onmouseup=null,e.onmouseleave=null,e.onmousemove=null,e.style.cursor=null}},{key:"handleTouchStart",value:function(n){if(n.preventDefault(),(2==n.touches.length||1==n.touches.length)&&(this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length})),2==n.touches.length)){var e=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],t=[e[0][0]-e[1][0],e[0][1]-e[1][1]];this.touch_dist=t[0]*t[0]+t[1]*t[1]}}},{key:"handleTouchMove",value:function(n){if(n.preventDefault(),2==n.touches.length||1==n.touches.length){var e=this.shadowRoot.getElementById("map-backend"),t=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length})),o=e.clientPosToMapPos(this.avg_touch_pos);this.avg_touch_pos=t;var a=e.clientPosToMapPos([t[0],t[1]]),r=[a[0]-o[0],a[1]-o[1]],i=[e.center[0]-r[0],e.center[1]-r[1]],l=e.scale;if(2==n.touches.length){var s=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],c=[s[0][0]-s[1][0],s[0][1]-s[1][1]],d=c[0]*c[0]+c[1]*c[1];if(0!==this.touch_dist&&0!==d){l*=d/this.touch_dist,this.touch_dist=d;var u=(l=Math.min(Math.max(.5,l),30))/e.scale,h=e.clientPosToMapPos(t),p=[(h[0]-i[0])*(1-1/u),(h[1]-i[1])*(1-1/u)];i[0]+=p[0],i[1]+=p[1]}}e.setCenterAndScale(i,l)}}},{key:"handleTouchEnd",value:function(n){n.preventDefault(),this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length}))}},{key:"handleOptionChange",value:function(n){var e=n.target.value;this.data=L(L(L({},this.data),this.data.options[e]),{},{option_selected:e})}},{key:"handleDetailsChange",value:function(n){this.details=n.target.checked}},{key:"handle3dChange",value:function(n){this.render3d=n.target.checked}},{key:"drawMap",value:function(n,e,t){var i=n.filter((function(n){return n})).map((function(n,o){return L(L({},n),{},{color:e[o],data:t.data[o],columns:t.columns})}));return 0==i.length?(0,D.dy)(o||(o=(0,w.Z)(['<div class="no-data">No data</div>']))):(0,B.F)(this.render3d?(0,D.dy)(a||(a=(0,w.Z)(['\n                    <map-backend-3d\n                        id="map-backend"\n                        .locations="','"\n                        @hover="','"\n                    ></map-backend-3d>'])),i,this.handleLocationHover):(0,D.dy)(r||(r=(0,w.Z)(['\n                    <map-backend\n                        id="map-backend"\n                        .locations="','"\n                        @hover="','"\n                    ></map-backend>'])),i,this.handleLocationHover))}},{key:"render",value:function(){var n=this;try{var e,t=this.data;if((null==t||null===(e=t.locations)||void 0===e?void 0:e.length)>0){var o,a;t.title&&(document.title=t.title);var r,b=t.data.map((function(n){return t.color_using?t.color_using.map((function(e){return n[e]})):n})),k=E.parseColor(t.defcolor||"#ffffff");if((null==b||null===(o=b[0])||void 0===o?void 0:o.length)>0){var M=b.reduce((function(n,e){return n.map((function(n,t){return Math.max(n,e[t])}))})),Z=b.reduce((function(n,e){return n.map((function(n,t){return Math.min(n,e[t])}))}));r=b.map((function(n){if(1==n.length){var e=E.parseColor(t.colors[0]),o=E.colorPropScale((0,S.U)(n[0],Z[0],M[0],0,1));return E.blendColors([e,k],[o,1-o])}var a=n.reduce((function(n,e){return n+e})),r=t.colors.map((function(n){return E.parseColor(n)})),i=n.map((function(n){return 0!==a?n/a:1}));return E.blendColors(r,i)}))}else r=t.locations.map((function(){return k}));var _=b.reduce((function(n,e){return n.map((function(n,t){return Math.min(n,e[t])}))})),P=b.reduce((function(n,e){return n.map((function(n,t){return Math.max(n,e[t])}))})),C=E.getCachedLocations(t.locations);return(0,D.dy)(i||(i=(0,w.Z)(['\n                    <div id="map-renderer-root">\n                        <div\n                            id="map-wrapper"\n                            @wheel="','"\n                            @mousedown="','"\n                            @touchstart="','"\n                            @touchmove="','"\n                            @touchend="','"\n                        >\n                            ',"\n                            ",'\n                        </div>\n                        <div class="title">','</div>\n                        <div id="option-box">\n                            <div>\n                                <input type="checkbox" id="details" ?checked='," @change=",'>\n                                <label for="details">Details</label>\n                            </div>\n                            ','\n                        </div>\n                        <div id="map-legend">\n                            <div class="current-legend">\n                            ',"\n                            </div>\n                            ","\n                        </div>\n                    </div>\n                "])),this.handleScroll,this.handleDragStart,this.handleTouchStart,this.handleTouchMove,this.handleTouchEnd,this.details?(0,D.dy)(l||(l=(0,w.Z)(['\n                                    <div id="info-box-wrapper">\n                                        <div id="info-box-background"></div>\n                                        <div id="info-box">\n                                            <div id="info-box-name"></div>\n                                            <hr />\n                                            <div class="info-field">\n                                                ',"\n                                            </div>\n                                        </div>\n                                    </div>"])),t.columns.map((function(n){return(0,D.dy)(s||(s=(0,w.Z)(['\n                                                    <span class="info-field-name">','</span>\n                                                    <span class="info-field-value"></span>\n                                                '])),n)}))):(0,D.dy)(c||(c=(0,w.Z)([""]))),C.includes(null)?(0,j.C)((0,x.Z)(R().mark((function e(){return R().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=n,e.next=3,E.getLocations(t.locations);case 3:return e.t1=e.sent,e.t2=r,e.t3=t,e.abrupt("return",e.t0.drawMap.call(e.t0,e.t1,e.t2,e.t3));case 7:case"end":return e.stop()}}),e)})))(),(0,D.dy)(d||(d=(0,w.Z)(["<ui-spinner></ui-spinner>"])))):this.drawMap(C,r,t),t.title,this.details,this.handleDetailsChange,this.data.allow_3d&&(0,S.C)()?(0,D.dy)(u||(u=(0,w.Z)(['\n                                    <div>\n                                        <input type="checkbox" id="render3d" ?checked='," @change=",'>\n                                        <label for="render3d">3D</label>\n                                    </div>'])),this.render3d,this.handle3dChange):(0,D.dy)(h||(h=(0,w.Z)([""]))),(null==b||null===(a=b[0])||void 0===a?void 0:a.length)>1?t.colors.map((function(n,e){return(0,D.dy)(p||(p=(0,w.Z)(['\n                                        <div class="legend-item">\n                                            <span class="color-block" style="','"></span>\n                                            <span class="legend-label">',"</span>\n                                        </div>\n                                    "])),(0,O.V)({background:n}),t.color_using?t.columns[t.color_using[e]]:t.color_using[e])})):t.colors.length>=1?(0,D.dy)(f||(f=(0,w.Z)(['\n                                            <div class="legend-item">\n                                                ','\n                                                <span class="color-gradiant">\n                                                    <span>','</span>\n                                                    <span class="scale" style="','"></span>\n                                                    <span>',"</span>\n                                                </span>\n                                            </div>\n                                        "])),t.options?null:(0,D.dy)(m||(m=(0,w.Z)(['\n                                                            <span class="legend-label">',"</span>\n                                                        "])),t.color_using?t.columns[t.color_using[0]]:t.color_using[0]),(Math.round(100*P[0])/100).toLocaleString(),(0,O.V)({background:"linear-gradient(".concat(t.colors[0],",").concat(t.defcolor,")")}),(Math.round(100*_[0])/100).toLocaleString()):null,t.options?(0,D.dy)(v||(v=(0,w.Z)(['\n                                    <select\n                                        class="select-option"\n                                        @change="','"\n                                    >',"</select>\n                                "])),this.handleOptionChange,t.options.map((function(n,e){return(0,D.dy)(g||(g=(0,w.Z)(['\n                                            <option\n                                                value="','"\n                                                ?selected="','"\n                                            >',"</option>\n                                        "])),e,e==t.option_selected,n.name)}))):null)}throw"No data"}catch(n){return(0,D.dy)(y||(y=(0,w.Z)(['\n                <div id="map-renderer-root">\n                    <div class="no-data">No data</div>\n                </div>\n            '])))}}}],[{key:"properties",get:function(){return{data:{type:Object},render3d:{state:!0},details:{state:!0}}}},{key:"styles",get:function(){return(0,D.iv)(b||(b=(0,w.Z)(["\n            * {\n                box-sizing: border-box;\n            }\n            :host {\n                width: 100%;\n                height: 100%;\n                display: block;\n                overflow: hidden;\n            }\n            div#map-renderer-root {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                position: relative;\n                color: white;\n                --background: var(--background-dark);\n                background: var(--background);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            div#map-wrapper {\n                position: relative;\n                width: 100%;\n                height: 100%;\n                max-width: 100%;\n                max-height: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                will-change: cursor;\n            }\n            div#info-box-wrapper {\n                --anchor-point: 50%;\n                --anchor-at-bottom: 0;\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: 100;\n                transform: translate(\n                    calc(var(--anchor-point) * -1),\n                    calc(var(--anchor-at-bottom) * (-100% - 8.5px) + (1 - var(--anchor-at-bottom)) * 8.5px));\n                display: none;\n                pointer-events: none;\n                will-change: transform, top, left;\n            }\n            div#info-box-wrapper.visible {\n                display: block;\n            }\n            div#info-box {\n                padding: 0.5rem;\n                font-size: 0.9rem;\n                font-family: Roboto, sans-serif;\n                color: black;\n                display: block;\n                width: max-content;\n                height: max-content;\n                max-width: 15rem;\n                min-width: 200px;\n                width: 100%;\n            }\n            div#info-box-name {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            div#info-box-background {\n                display: block;\n                position: absolute;\n                background: var(--background-light);\n                width: 100%;\n                height: 100%;\n                border-radius: 4px;\n                opacity: 0.85;\n                z-index: -1;\n            }\n            div#info-box-background::before {\n                content: '';\n                box-shadow: var(--shadow-small);\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                border-radius: 4px;\n            }\n            div#info-box-background::after {\n                content: '';\n                position: absolute;\n                width: 12px;\n                height: 12px;\n                top: calc(var(--anchor-at-bottom) * 100%);\n                left: var(--anchor-point);\n                transform: translate(-50%, -50%) rotate(45deg);\n                background: var(--background-light);\n                will-change: top, left\n            }\n            div.info-field {\n                display: grid;\n                grid-template-columns: auto auto;\n            }\n            span.info-field-name {\n                padding-right: 1rem;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            span.info-field-value {\n                display: flex;\n                align-items: center;\n                justify-content: flex-end;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            hr {\n                border: 1px solid var(--secondary);\n            }\n            div.title {\n                flex: 0 0 auto;\n                font-size: 1.2rem;\n                padding: 1rem 0 0 1rem;\n                font-family: Roboto, sans-serif;\n                position: absolute;\n                z-index: 10;\n                left: 0;\n                top: 0;\n                pointer-events: none;\n            }\n            div#map-legend {\n                z-index: 9;\n                position: absolute;\n                padding: 0 1rem 1rem 0;\n                bottom: 0;\n                right: 0;\n                font-size: 0.85rem;\n                font-family: Roboto, sans-serif;\n                display: flex;\n                flex-flow: column;\n                pointer-events: none;\n                align-items: flex-end;\n            }\n            div.current-legend {\n                display: flex;\n                flex-flow: column;\n                text-align: right;\n                padding: 0.5rem;\n                text-shadow: black 0px 0px 10px;\n            }\n            div.current-legend .legend-item {\n                display: flex;\n                flex-flow: row;\n                align-items: center;\n                justify-content: flex-start;\n            }\n            div.current-legend .color-block {\n                margin: 0 0.5rem;\n            }\n            div.current-legend .color-gradiant {\n                margin-left: 0.5rem;\n            }\n            select.select-option {\n                pointer-events: all;\n                appearance: none;\n                background: var(--background-darkish);\n                color: white;\n                border: none;\n                padding: 0.35rem;\n                border-radius: 4px;\n                text-align: center;\n                text-align-last: center;\n            }\n            select.select-option:hover {\n                cursor: pointer;\n            }\n            span.color-gradiant {\n                display: flex;\n                flex-flow: column;\n                align-items: center;\n            }\n            span.color-gradiant span.scale {\n                display: block;\n                height: 5rem;\n                width: 0.65rem;\n                box-shadow: var(--shadow-small);\n                margin-top: 0.25rem;\n                margin-bottom: 0.25rem;\n            }\n            span.color-block {\n                display: block;\n                height: 0.5rem;\n                width: 0.5rem;\n                box-shadow: var(--shadow-small);\n            }\n            div.no-data {\n                font-family: Roboto, sans-serif;\n                font-weight: 600;\n                font-size: 2rem; \n                white-space: nowrap;\n                text-transform: uppercase;\n            }\n            #option-box {\n                position: absolute;\n                left: 0.5rem;\n                bottom: 0.5rem;\n                display: flex;\n                flex-flow: column;\n            }\n            #option-box div {\n                padding: 0.25rem;\n                text-shadow: black 0px 0px 10px;\n            }\n        "])))}},{key:"parseColor",value:function(n){var e=n.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:[255,255,255]}},{key:"blendColors",value:function(n,e){var t=[0,0,0],o=e.reduce((function(n,e){return n+e}),0);return 0===o?n[0]||t:(n.forEach((function(n,o){return t.forEach((function(a,r){return t[r]+=n[r]*n[r]*e[o]}))})),t.map((function(n){return Math.sqrt(n/o)})))}},{key:"colorPropScale",value:function(n){return Math.log10(99*n+1)/2}},{key:"getCachedLocations",value:function(n){return n.map((function(n){return n in I?I[n]:null}))}},{key:"getLocations",value:function(n){return Promise.all(n.map(function(){var n=(0,x.Z)(R().mark((function n(e){var t,o,a;return R().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!e){n.next=25;break}if(I[e]){n.next=22;break}return n.prev=2,n.next=5,fetch("".concat("./static/data","/").concat(e,".bin"));case 5:if(!(t=n.sent).ok){n.next=16;break}return n.t0=Uint8Array,n.next=10,t.arrayBuffer();case 10:n.t1=n.sent,o=new n.t0(n.t1),a=Y.LocationData.parse_location_data(o),I[e]={id:e,name:a.name,raw:a},n.next=17;break;case 16:I[e]=null;case 17:n.next=22;break;case 19:return n.prev=19,n.t2=n.catch(2),n.abrupt("return",null);case 22:return n.abrupt("return",I[e]);case 25:return n.abrupt("return",null);case 26:case"end":return n.stop()}}),n,null,[[2,19]])})));return function(e){return n.apply(this,arguments)}}()))}}]),E}(D.oi);customElements.define("map-renderer",X)},129:(n,e,t)=>{"use strict";var o,a,r,i,l=t(982),s=t(168),c=t(671),d=t(144),u=t(340),h=t(215),p=t(120),f=t(392);var m=function(n){(0,u.Z)(v,n);var e,t,m=(e=v,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,o=(0,p.Z)(e);if(t){var a=(0,p.Z)(this).constructor;n=Reflect.construct(o,arguments,a)}else n=o.apply(this,arguments);return(0,h.Z)(this,n)});function v(){return(0,c.Z)(this,v),m.apply(this,arguments)}return(0,d.Z)(v,[{key:"render",value:function(){return(0,f.dy)(o||(o=(0,s.Z)(['\n            <span class="ui-spinner">\n                ',"\n            </span>\n        "])),(0,l.Z)(Array(10).keys()).map((function(){return(0,f.dy)(a||(a=(0,s.Z)(["<span></span>"])))})))}}],[{key:"styles",get:function(){return(0,f.iv)(r||(r=(0,s.Z)(["\n            span.ui-spinner {\n                width: 5rem;\n                height: 5rem;\n                max-width: 100%;\n                max-height: 100%;\n                position: relative;\n                display: block;\n            }\n            span.ui-spinner span {\n                display: block;\n                position: absolute;\n                background: var(--primary);\n                border-radius: 50%;\n            }\n            @keyframes ui-spinner-keyframes {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n            ","\n        "])),(0,f.$m)((0,l.Z)(Array(10).keys()).map((function(n){return(0,f.iv)(i||(i=(0,s.Z)(["\n                span.ui-spinner span:nth-child(",") {\n                    animation: 1s calc(0.02s * ",") ease-in-out infinite ui-spinner-keyframes;\n                    width: calc(25% - 1% * ",");\n                    height: calc(25% - 1% * ",");\n                    top: calc(50% - (25% - 1% * ",") / 2);\n                    left: 0%;\n                    transform-origin: "," 50%;\n                }\n            "])),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(5e3/(25-1*(n+1))+"%"))})).join("")))}}]),v}(f.oi);customElements.define("ui-spinner",m)},293:(n,e,t)=>{"use strict";function o(n,e,t,o,a){return e===t?a:n<e?o:n>t?a:(n-e)/(t-e)*(a-o)+o}function a(){try{var n=document.createElement("canvas"),e=n.getContext("webgl")||n.getContext("experimental-webgl");return e&&e.getExtension("OES_element_index_uint")}catch(n){return!1}}t.d(e,{C:()=>a,U:()=>o})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,