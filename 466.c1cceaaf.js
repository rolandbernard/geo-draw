"use strict";(self.webpackChunkgeo_draw=self.webpackChunkgeo_draw||[]).push([[466],{466:(n,e,t)=>{t.d(e,{Z:()=>X});var o,r,a,i,l,s,c,d,u,h,p,f,m,v,g,y,b,x,w=t(885),k=t(861),M=t(168),Z=t(942),P=t(671),_=t(144),C=t(340),D=t(215),R=t(120),E=t(757),O=t.n(E),B=t(392),I=t(959),j=t(458),S=t(845),T=(t(129),t(293));function Y(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function L(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Y(Object(t),!0).forEach((function(e){(0,Z.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Y(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}(0,T.C)()?Promise.all([t.e(9),t.e(238)]).then(t.bind(t,964)):t.e(968).then(t.bind(t,971));var A={},X=function(n){(0,C.Z)(E,n);var e,t,Z=(e=E,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,o=(0,R.Z)(e);if(t){var r=(0,R.Z)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return(0,D.Z)(this,n)});function E(){var n;return(0,P.Z)(this,E),(n=Z.call(this)).render3d=!1,n.details=!0,n}return(0,_.Z)(E,[{key:"handleLocationHover",value:function(n){if(this.details){var e=this.shadowRoot.getElementById("info-box-wrapper");if(n.location&&n.position){var t=this.shadowRoot.getElementById("info-box-name"),o=this.shadowRoot.getElementById("map-wrapper");t.innerText=n.location.name.split(",")[0],Array.from(e.getElementsByClassName("info-field-value")).forEach((function(e,t){e.innerText=(Math.round(100*n.location.data[t])/100).toLocaleString()}));var r=o.getBoundingClientRect(),a=n.position[0]-r.x,i=n.position[1]-r.y,l=Math.min(Math.max(l,0),r.height);e.style.setProperty("--anchor-point",a/r.width*90+5+"%"),e.style.setProperty("--anchor-at-bottom",l>1.2*(e.clientHeight+12)?1:0),e.style.left=a+"px",e.style.top=i+"px",e.classList.add("visible");var s=e.getBoundingClientRect();s.x<4?(a=Math.max(a,8.5),i=Math.min(Math.max(i,.1*s.height),r.height-.1*s.height),e.style.setProperty("--anchor-point","0%"),e.style.setProperty("--anchor-at-bottom",i/r.height*.8+.1)):s.x+s.width+4>r.x+r.width?(a=Math.min(a,r.width-8.5),i=Math.min(Math.max(i,.1*s.height),r.height-.1*s.height),e.style.setProperty("--anchor-point","100%"),e.style.setProperty("--anchor-at-bottom",i/r.height*.8+.1)):(i=Math.min(Math.max(i,0),r.height),e.style.setProperty("--anchor-point",a/r.width*90+5+"%"),e.style.setProperty("--anchor-at-bottom",i>1.2*(s.height+12)?1:0)),e.style.left=a+"px",e.style.top=i+"px",e.current_location=location}else{var c=this.shadowRoot.getElementById("info-box-wrapper");c.classList.remove("visible"),c.current_location=null}}}},{key:"handleScroll",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-backend"),t=e.scale;n.deltaY<0?t*=(0,T.U)(n.deltaY,0,-10,1.1,1.5):t*=(0,T.U)(n.deltaY,0,10,.6,.9);var o=(t=Math.min(Math.max(.5,t),30))/e.scale,r=e.center,a=e.clientPosToMapPos([n.clientX,n.clientY]),i=[(a[0]-r[0])*(1-1/o),(a[1]-r[1])*(1-1/o)],l=[r[0]+i[0],r[1]+i[1]];e.setCenterAndScale(l,t)}},{key:"handleDragStart",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-wrapper");this.last_drag_pos=[n.clientX,n.clientY],e.onmouseup=this.handleDragEnd.bind(this),e.onmouseleave=this.handleDragEnd.bind(this),e.onmousemove=this.handleDragMove.bind(this),e.style.cursor="grabbing"}},{key:"handleDragMove",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-backend"),t=e.clientPosToMapPos(this.last_drag_pos);this.last_drag_pos=[n.clientX,n.clientY];var o=e.clientPosToMapPos([n.clientX,n.clientY]),r=[o[0]-t[0],o[1]-t[1]],a=[e.center[0]-r[0],e.center[1]-r[1]];e.setCenterAndScale(a,e.scale)}},{key:"handleDragEnd",value:function(n){n.preventDefault();var e=this.shadowRoot.getElementById("map-wrapper");e.onmouseup=null,e.onmouseleave=null,e.onmousemove=null,e.style.cursor=null}},{key:"handleTouchStart",value:function(n){if(n.preventDefault(),(2==n.touches.length||1==n.touches.length)&&(this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length})),2==n.touches.length)){var e=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],t=[e[0][0]-e[1][0],e[0][1]-e[1][1]];this.touch_dist=t[0]*t[0]+t[1]*t[1]}}},{key:"handleTouchMove",value:function(n){if(n.preventDefault(),2==n.touches.length||1==n.touches.length){var e=this.shadowRoot.getElementById("map-backend"),t=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length})),o=e.clientPosToMapPos(this.avg_touch_pos);this.avg_touch_pos=t;var r=e.clientPosToMapPos([t[0],t[1]]),a=[r[0]-o[0],r[1]-o[1]],i=[e.center[0]-a[0],e.center[1]-a[1]],l=e.scale;if(2==n.touches.length){var s=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],c=[s[0][0]-s[1][0],s[0][1]-s[1][1]],d=c[0]*c[0]+c[1]*c[1];if(0!==this.touch_dist&&0!==d){l*=d/this.touch_dist,this.touch_dist=d;var u=(l=Math.min(Math.max(.5,l),30))/e.scale,h=e.clientPosToMapPos(t),p=[(h[0]-i[0])*(1-1/u),(h[1]-i[1])*(1-1/u)];i[0]+=p[0],i[1]+=p[1]}}e.setCenterAndScale(i,l)}}},{key:"handleTouchEnd",value:function(n){n.preventDefault(),this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,e){return[n[0]+e[0],n[1]+e[1]]})).map((function(e){return e/n.touches.length}))}},{key:"handleOptionChange",value:function(n){var e=n.target.value;this.data=L(L(L({},this.data),this.data.options[e]),{},{option_selected:e})}},{key:"handleDetailsChange",value:function(n){this.details=n.target.checked}},{key:"handle3dChange",value:function(n){this.render3d=n.target.checked}},{key:"drawMap",value:function(n){var e=this.data;try{var t;if((null==e||null===(t=e.locations)||void 0===t?void 0:t.length)>0){var g,y;e.title&&(document.title=e.title);var b,x=e.data.map((function(n){return e.color_using?e.color_using.map((function(e){return n[e]})):n})),w=E.parseColor(e.defcolor||"#ffffff");if((null==x||null===(g=x[0])||void 0===g?void 0:g.length)>0){var k=x.reduce((function(n,e){return n.map((function(n,t){return Math.max(n,e[t])}))})),Z=x.reduce((function(n,e){return n.map((function(n,t){return Math.min(n,e[t])}))}));b=x.map((function(n){if(1==n.length){var t=E.parseColor(e.colors[0]),o=E.colorPropScale((0,T.U)(n[0],Z[0],k[0],0,1));return E.blendColors([t,w],[o,1-o])}var r=n.reduce((function(n,e){return n+e})),a=e.colors.map((function(n){return E.parseColor(n)})),i=n.map((function(n){return 0!==r?n/r:1}));return E.blendColors(a,i)}))}else b=e.locations.map((function(){return w}));var P=n.map((function(n,t){return n?L(L({},n),{},{color:b[t],data:e.data[t],columns:e.columns}):null})).filter((function(n){return n}));if(0==P.length)throw"No data";var _=x.reduce((function(n,e){return n.map((function(n,t){return Math.min(n,e[t])}))})),C=x.reduce((function(n,e){return n.map((function(n,t){return Math.max(n,e[t])}))}));return(0,B.dy)(o||(o=(0,M.Z)(['\n                    <div\n                        id="map-wrapper"\n                        @wheel="','"\n                        @mousedown="','"\n                        @touchstart="','"\n                        @touchmove="','"\n                        @touchend="','"\n                    >\n                        ',"\n                        ",'\n                    </div>\n                    <div class="title">','</div>\n                    <div id="option-box">\n                        <div>\n                            <input type="checkbox" id="details" ?checked='," @change=",'>\n                            <label for="details">Details</label>\n                        </div>\n                        ','\n                    </div>\n                    <div id="map-legend">\n                        <div class="current-legend">\n                        ',"\n                        </div>\n                        ","\n                    </div>\n                "])),this.handleScroll,this.handleDragStart,this.handleTouchStart,this.handleTouchMove,this.handleTouchEnd,this.details?(0,B.dy)(r||(r=(0,M.Z)(['\n                                <div id="info-box-wrapper">\n                                    <div id="info-box-background"></div>\n                                    <div id="info-box">\n                                        <div id="info-box-name"></div>\n                                        <hr />\n                                        <div class="info-field">\n                                            ',"\n                                        </div>\n                                    </div>\n                                </div>"])),e.columns.map((function(n){return(0,B.dy)(a||(a=(0,M.Z)(['\n                                                <span class="info-field-name">','</span>\n                                                <span class="info-field-value"></span>\n                                            '])),n)}))):(0,B.dy)(i||(i=(0,M.Z)([""]))),(0,S.F)(this.render3d?(0,B.dy)(l||(l=(0,M.Z)(['\n                                <map-backend-3d\n                                    id="map-backend"\n                                    .locations="','"\n                                    @hover="','"\n                                ></map-backend-3d>'])),P,this.handleLocationHover):(0,B.dy)(s||(s=(0,M.Z)(['\n                                <map-backend\n                                    id="map-backend"\n                                    .locations="','"\n                                    @hover="','"\n                                ></map-backend>'])),P,this.handleLocationHover)),e.title,this.details,this.handleDetailsChange,this.data.allow_3d&&(0,T.C)()?(0,B.dy)(c||(c=(0,M.Z)(['\n                                <div>\n                                    <input type="checkbox" id="render3d" ?checked='," @change=",'>\n                                    <label for="render3d">3D</label>\n                                </div>'])),this.render3d,this.handle3dChange):(0,B.dy)(d||(d=(0,M.Z)([""]))),(null==x||null===(y=x[0])||void 0===y?void 0:y.length)>1?e.colors.map((function(n,t){return(0,B.dy)(u||(u=(0,M.Z)(['\n                                    <div class="legend-item">\n                                        <span class="color-block" style="','"></span>\n                                        <span class="legend-label">',"</span>\n                                    </div>\n                                "])),(0,I.V)({background:n}),e.color_using?e.columns[e.color_using[t]]:e.color_using[t])})):e.colors.length>=1?(0,B.dy)(h||(h=(0,M.Z)(['\n                                        <div class="legend-item">\n                                            ','\n                                            <span class="color-gradiant">\n                                                <span>','</span>\n                                                <span class="scale" style="','"></span>\n                                                <span>',"</span>\n                                            </span>\n                                        </div>\n                                    "])),e.options?null:(0,B.dy)(p||(p=(0,M.Z)(['\n                                                        <span class="legend-label">',"</span>\n                                                    "])),e.color_using?e.columns[e.color_using[0]]:e.color_using[0]),(Math.round(100*C[0])/100).toLocaleString(),(0,I.V)({background:"linear-gradient(".concat(e.colors[0],",").concat(e.defcolor,")")}),(Math.round(100*_[0])/100).toLocaleString()):null,e.options?(0,B.dy)(f||(f=(0,M.Z)(['\n                                <select\n                                    class="select-option"\n                                    @change="','"\n                                >',"</select>\n                            "])),this.handleOptionChange,e.options.map((function(n,t){return(0,B.dy)(m||(m=(0,M.Z)(['\n                                        <option\n                                            value="','"\n                                            ?selected="','"\n                                        >',"</option>\n                                    "])),t,t==e.option_selected,n.name)}))):null)}throw"No data"}catch(n){return(0,B.dy)(v||(v=(0,M.Z)(['<div class="no-data">No data</div>'])))}}},{key:"render",value:function(){var n=this,e=E.getCachedLocations(this.data.locations);return e.includes(null)?(0,B.dy)(g||(g=(0,M.Z)(['\n                <div id="map-renderer-root">\n                    ',"\n                </div>\n            "])),(0,j.C)((0,k.Z)(O().mark((function e(){return O().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=n,e.next=3,E.getLocations(n.data.locations);case 3:return e.t1=e.sent,e.abrupt("return",e.t0.drawMap.call(e.t0,e.t1));case 5:case"end":return e.stop()}}),e)})))(),(0,B.dy)(y||(y=(0,M.Z)(["<ui-spinner></ui-spinner>"]))))):(0,B.dy)(b||(b=(0,M.Z)(['\n                <div id="map-renderer-root">\n                    ',"\n                </div>\n            "])),this.drawMap(e))}}],[{key:"properties",get:function(){return{data:{type:Object},render3d:{state:!0},details:{state:!0}}}},{key:"styles",get:function(){return(0,B.iv)(x||(x=(0,M.Z)(["\n            * {\n                box-sizing: border-box;\n            }\n            :host {\n                width: 100%;\n                height: 100%;\n                display: block;\n                overflow: hidden;\n            }\n            div#map-renderer-root {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                position: relative;\n                color: white;\n                --background: var(--background-dark);\n                background: var(--background);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            div#map-wrapper {\n                position: relative;\n                width: 100%;\n                height: 100%;\n                max-width: 100%;\n                max-height: 100%;\n                display: block;\n                will-change: cursor;\n            }\n            div#info-box-wrapper {\n                --anchor-point: 50%;\n                --anchor-at-bottom: 0;\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: 100;\n                transform: translate(\n                    calc(var(--anchor-point) * -1),\n                    calc(var(--anchor-at-bottom) * (-100% - 8.5px) + (1 - var(--anchor-at-bottom)) * 8.5px));\n                display: none;\n                pointer-events: none;\n                will-change: transform, top, left;\n            }\n            div#info-box-wrapper.visible {\n                display: block;\n            }\n            div#info-box {\n                padding: 0.5rem;\n                font-size: 0.9rem;\n                font-family: Roboto, sans-serif;\n                color: black;\n                display: block;\n                width: max-content;\n                height: max-content;\n                max-width: 15rem;\n                min-width: 200px;\n                width: 100%;\n            }\n            div#info-box-name {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            div#info-box-background {\n                display: block;\n                position: absolute;\n                background: var(--background-light);\n                width: 100%;\n                height: 100%;\n                border-radius: 4px;\n                opacity: 0.85;\n                z-index: -1;\n            }\n            div#info-box-background::before {\n                content: '';\n                box-shadow: var(--shadow-small);\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                border-radius: 4px;\n            }\n            div#info-box-background::after {\n                content: '';\n                position: absolute;\n                width: 12px;\n                height: 12px;\n                top: calc(var(--anchor-at-bottom) * 100%);\n                left: var(--anchor-point);\n                transform: translate(-50%, -50%) rotate(45deg);\n                background: var(--background-light);\n                will-change: top, left\n            }\n            div.info-field {\n                display: grid;\n                grid-template-columns: auto auto;\n            }\n            span.info-field-name {\n                padding-right: 1rem;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            span.info-field-value {\n                display: flex;\n                align-items: center;\n                justify-content: flex-end;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            hr {\n                border: 1px solid var(--secondary);\n            }\n            div.title {\n                flex: 0 0 auto;\n                font-size: 1.2rem;\n                padding: 1rem 0 0 1rem;\n                font-family: Roboto, sans-serif;\n                position: absolute;\n                z-index: 10;\n                left: 0;\n                top: 0;\n                pointer-events: none;\n            }\n            div#map-legend {\n                z-index: 9;\n                position: absolute;\n                padding: 0 1rem 1rem 0;\n                bottom: 0;\n                right: 0;\n                font-size: 0.85rem;\n                font-family: Roboto, sans-serif;\n                display: flex;\n                flex-flow: column;\n                pointer-events: none;\n                align-items: flex-end;\n            }\n            div.current-legend {\n                display: flex;\n                flex-flow: column;\n                text-align: right;\n                padding: 0.5rem;\n                text-shadow: black 0px 0px 10px;\n            }\n            div.current-legend .legend-item {\n                display: flex;\n                flex-flow: row;\n                align-items: center;\n                justify-content: flex-start;\n            }\n            div.current-legend .color-block {\n                margin: 0 0.5rem;\n            }\n            div.current-legend .color-gradiant {\n                margin-left: 0.5rem;\n            }\n            select.select-option {\n                pointer-events: all;\n                appearance: none;\n                background: var(--background-darkish);\n                color: white;\n                border: none;\n                padding: 0.35rem;\n                border-radius: 4px;\n                text-align: center;\n                text-align-last: center;\n            }\n            select.select-option:hover {\n                cursor: pointer;\n            }\n            span.color-gradiant {\n                display: flex;\n                flex-flow: column;\n                align-items: center;\n            }\n            span.color-gradiant span.scale {\n                display: block;\n                height: 5rem;\n                width: 0.65rem;\n                box-shadow: var(--shadow-small);\n                margin-top: 0.25rem;\n                margin-bottom: 0.25rem;\n            }\n            span.color-block {\n                display: block;\n                height: 0.5rem;\n                width: 0.5rem;\n                box-shadow: var(--shadow-small);\n            }\n            div.no-data {\n                font-family: Roboto, sans-serif;\n                font-weight: 600;\n                font-size: 2rem; \n                white-space: nowrap;\n                text-transform: uppercase;\n            }\n            #option-box {\n                position: absolute;\n                left: 0.5rem;\n                bottom: 0.5rem;\n                display: flex;\n                flex-flow: column;\n            }\n            #option-box div {\n                padding: 0.25rem;\n                text-shadow: black 0px 0px 10px;\n            }\n        "])))}},{key:"parseBinaryData",value:function(n){for(var e=new Uint8Array(n),t=0;0!=e[t];)t++;var o=new Uint8Array(n,0,t),r=new TextDecoder,a=new DataView(n,t+1);t=0;var i=[],l=a.getUint32(t,!0);t+=4;for(var s=0;s<l;s++){i.push([]);var c=a.getUint32(t,!0);t+=4;for(var d=0;d<c;d++){i[s].push([]);var u=a.getUint32(t,!0);t+=4;for(var h=0;h<u;h++){var p=a.getInt32(t,!0);t+=4;var f=a.getInt32(t,!0);t+=4,i[s][d].push([p,f])}}}return{name:r.decode(o),coords:i}}},{key:"project",value:function(n){var e=(0,w.Z)(n,2),t=e[0],o=e[1];return[Math.PI+t,function(){Math.abs(o)>85&&(o=85*Math.sign(o));var n=o;return Math.PI-Math.log(Math.tan(Math.PI/4+n/2))}()]}},{key:"to_radians",value:function(n){var e=(0,w.Z)(n,2),t=e[0],o=e[1];return[t*Math.PI/180,o*Math.PI/180]}},{key:"parseColor",value:function(n){var e=n.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:[255,255,255]}},{key:"blendColors",value:function(n,e){var t=[0,0,0],o=e.reduce((function(n,e){return n+e}),0);return 0===o?n[0]||t:(n.forEach((function(n,o){return t.forEach((function(r,a){return t[a]+=n[a]*n[a]*e[o]}))})),t.map((function(n){return Math.sqrt(n/o)})))}},{key:"colorPropScale",value:function(n){return Math.log10(99*n+1)/2}},{key:"getCachedLocations",value:function(n){return n.map((function(n){return n in A?A[n]:null}))}},{key:"getLocations",value:function(n){return Promise.all(n.map(function(){var n=(0,k.Z)(O().mark((function n(e){var t,o,r;return O().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!e){n.next=25;break}if(A[e]){n.next=22;break}return n.prev=2,n.next=5,fetch("".concat("./static/data","/").concat(e,".bin"));case 5:if(!(t=n.sent).ok){n.next=16;break}return n.t0=E,n.next=10,t.arrayBuffer();case 10:n.t1=n.sent,o=n.t0.parseBinaryData.call(n.t0,n.t1),r=o.coords.map((function(n){return n.map((function(n){return n.map((function(n){var e=(0,w.Z)(n,2),t=e[0],o=e[1];return E.to_radians([t/1e7,o/1e7])}))}))})),A[e]={id:e,name:o.name,coords:r,min:r.flat(2).reduce((function(n,e){return[Math.min(n[0],e[0]),Math.min(n[1],e[1])]})),max:r.flat(2).reduce((function(n,e){return[Math.max(n[0],e[0]),Math.max(n[1],e[1])]})),raw_coords:o.coords},n.next=17;break;case 16:A[e]=null;case 17:n.next=22;break;case 19:return n.prev=19,n.t2=n.catch(2),n.abrupt("return",null);case 22:return n.abrupt("return",A[e]);case 25:return n.abrupt("return",null);case 26:case"end":return n.stop()}}),n,null,[[2,19]])})));return function(e){return n.apply(this,arguments)}}()))}}]),E}(B.oi);customElements.define("map-renderer",X)},129:(n,e,t)=>{var o,r,a,i,l=t(982),s=t(168),c=t(671),d=t(144),u=t(340),h=t(215),p=t(120),f=t(392);var m=function(n){(0,u.Z)(v,n);var e,t,m=(e=v,t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,o=(0,p.Z)(e);if(t){var r=(0,p.Z)(this).constructor;n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments);return(0,h.Z)(this,n)});function v(){return(0,c.Z)(this,v),m.apply(this,arguments)}return(0,d.Z)(v,[{key:"render",value:function(){return(0,f.dy)(o||(o=(0,s.Z)(['\n            <span class="ui-spinner">\n                ',"\n            </span>\n        "])),(0,l.Z)(Array(10).keys()).map((function(){return(0,f.dy)(r||(r=(0,s.Z)(["<span></span>"])))})))}}],[{key:"styles",get:function(){return(0,f.iv)(a||(a=(0,s.Z)(["\n            span.ui-spinner {\n                width: 5rem;\n                height: 5rem;\n                max-width: 100%;\n                max-height: 100%;\n                position: relative;\n                display: block;\n            }\n            span.ui-spinner span {\n                display: block;\n                position: absolute;\n                background: var(--primary);\n                border-radius: 50%;\n            }\n            @keyframes ui-spinner-keyframes {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n            ","\n        "])),(0,f.$m)((0,l.Z)(Array(10).keys()).map((function(n){return(0,f.iv)(i||(i=(0,s.Z)(["\n                span.ui-spinner span:nth-child(",") {\n                    animation: 1s calc(0.02s * ",") ease-in-out infinite ui-spinner-keyframes;\n                    width: calc(25% - 1% * ",");\n                    height: calc(25% - 1% * ",");\n                    top: calc(50% - (25% - 1% * ",") / 2);\n                    left: 0%;\n                    transform-origin: "," 50%;\n                }\n            "])),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(n+1),(0,f.$m)(5e3/(25-1*(n+1))+"%"))})).join("")))}}]),v}(f.oi);customElements.define("ui-spinner",m)},293:(n,e,t)=>{function o(n,e,t,o,r){return e===t?r:n<e?o:n>t?r:(n-e)/(t-e)*(r-o)+o}function r(){try{var n=document.createElement("canvas");return n.getContext("webgl")||n.getContext("experimental-webgl")}catch(n){return!1}}t.d(e,{C:()=>r,U:()=>o})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,