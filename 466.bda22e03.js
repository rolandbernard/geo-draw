"use strict";(self.webpackChunkgeo_draw=self.webpackChunkgeo_draw||[]).push([[466],{65:(n,t,e)=>{e.a(n,(async(r,a)=>{try{e.d(t,{HK:()=>B,MC:()=>S,Or:()=>T,e6:()=>y,oH:()=>D,rf:()=>R,ug:()=>A,w9:()=>v});var o=e(671),i=e(144),l=e(530);n=e.hmd(n);var c=r([l]);l=(c.then?(await c)():c)[0];var s=new Array(32).fill(void 0);s.push(void 0,null,!0,!1);var u=s.length;function b(n){u===s.length&&s.push(s.length+1);var t=u;return u=s[t],s[t]=n,t}function w(n){return s[n]}function k(n){n<36||(s[n]=u,u=n)}function x(n){var t=w(n);return k(n),t}var d=new("undefined"==typeof TextDecoder?(0,n.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});d.decode();var p=null;function Z(){return null!==p&&p.buffer===l.memory.buffer||(p=new Uint8Array(l.memory.buffer)),p}function M(n,t){return d.decode(Z().subarray(n,n+t))}var f=null;function P(){return null!==f&&f.buffer===l.memory.buffer||(f=new Int32Array(l.memory.buffer)),f}var h=null;function C(){return null!==h&&h.buffer===l.memory.buffer||(h=new Float32Array(l.memory.buffer)),h}function O(n,t){return C().subarray(n/4,n/4+t)}var _=0;function j(n,t){if(!(n instanceof t))throw new Error("expected instance of ".concat(t.name));return n.ptr}var g=null;function E(n,t){return(null!==g&&g.buffer===l.memory.buffer||(g=new Uint32Array(l.memory.buffer)),g).subarray(n/4,n/4+t)}var v=function(){function n(){(0,o.Z)(this,n)}return(0,i.Z)(n,[{key:"__destroy_into_raw",value:function(){var n=this.ptr;return this.ptr=0,n}},{key:"free",value:function(){var n=this.__destroy_into_raw();l.__wbg_locationdata_free(n)}},{key:"name",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.locationdata_name(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1];return M(t,e)}finally{l.__wbindgen_add_to_stack_pointer(16),l.__wbindgen_free(t,e)}}},{key:"min",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.locationdata_min(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"max",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.locationdata_max(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"count_polygons",value:function(){return l.locationdata_count_polygons(this.ptr)>>>0}},{key:"get_polygon",value:function(n){var t=l.locationdata_get_polygon(this.ptr,n);return m.__wrap(t)}},{key:"get_proj_polygon",value:function(n){var t=l.locationdata_get_proj_polygon(this.ptr,n);return m.__wrap(t)}},{key:"proj_min",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.locationdata_proj_min(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"proj_max",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.locationdata_proj_max(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}}],[{key:"__wrap",value:function(t){var e=Object.create(n.prototype);return e.ptr=t,e}},{key:"parse_location_data",value:function(t){var e,r,a=(e=t,r=(0,l.__wbindgen_malloc)(1*e.length),Z().set(e,r/1),_=e.length,r),o=_,i=l.locationdata_parse_location_data(a,o);return n.__wrap(i)}}]),n}(),m=function(){function n(){(0,o.Z)(this,n)}return(0,i.Z)(n,[{key:"__destroy_into_raw",value:function(){var n=this.ptr;return this.ptr=0,n}},{key:"free",value:function(){var n=this.__destroy_into_raw();l.__wbg_polygonview_free(n)}},{key:"vertex",get:function(){return x(l.polygonview_vertex(this.ptr))}},{key:"holes",get:function(){return x(l.polygonview_holes(this.ptr))}},{key:"min",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.polygonview_min(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"max",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.polygonview_max(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}}],[{key:"__wrap",value:function(t){var e=Object.create(n.prototype);return e.ptr=t,e}}]),n}(),y=function(){function n(){(0,o.Z)(this,n)}return(0,i.Z)(n,[{key:"__destroy_into_raw",value:function(){var n=this.ptr;return this.ptr=0,n}},{key:"free",value:function(){var n=this.__destroy_into_raw();l.__wbg_triangulateddata_free(n)}},{key:"vertex",get:function(){return x(l.triangulateddata_vertex(this.ptr))}},{key:"color",get:function(){return x(l.triangulateddata_color(this.ptr))}},{key:"triangles",get:function(){return x(l.triangulateddata_triangles(this.ptr))}},{key:"outline_triangles",get:function(){return x(l.triangulateddata_outline_triangles(this.ptr))}},{key:"outline_normals",get:function(){return x(l.triangulateddata_outline_normals(this.ptr))}},{key:"min",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.triangulateddata_min(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"max",get:function(){try{var n=l.__wbindgen_add_to_stack_pointer(-16);l.triangulateddata_max(n,this.ptr);var t=P()[n/4+0],e=P()[n/4+1],r=O(t,e).slice();return l.__wbindgen_free(t,4*e),r}finally{l.__wbindgen_add_to_stack_pointer(16)}}},{key:"add_location",value:function(n){j(n,v),l.triangulateddata_add_location(this.ptr,n.ptr)}},{key:"triangulate",value:function(n){l.triangulateddata_triangulate(this.ptr,n)}},{key:"generate_outlines",value:function(n){l.triangulateddata_generate_outlines(this.ptr,n)}},{key:"get_intersection",value:function(n,t){try{var e=l.__wbindgen_add_to_stack_pointer(-16),r=(s=n,u=(0,l.__wbindgen_malloc)(4*s.length),C().set(s,u/4),_=s.length,u),a=_;l.triangulateddata_get_intersection(e,this.ptr,r,a,t);var o,i=P()[e/4+0],c=P()[e/4+1];return 0!==i&&(o=E(i,c).slice(),l.__wbindgen_free(i,4*c)),o}finally{l.__wbindgen_add_to_stack_pointer(16)}var s,u}}],[{key:"__wrap",value:function(t){var e=Object.create(n.prototype);return e.ptr=t,e}},{key:"new",value:function(){var t=l.triangulateddata_new();return n.__wrap(t)}}]),n}();function D(){return b(l.memory)}function R(n){return b(w(n).buffer)}function B(n,t,e){return b(new Float32Array(w(n),t>>>0,e>>>0))}function A(n){x(n)}function S(n,t,e){return b(new Uint32Array(w(n),t>>>0,e>>>0))}function T(n,t){throw new Error(M(n,t))}a()}catch(Y){a(Y)}}))},466:(n,t,e)=>{e.a(n,(async(n,t)=>{try{var r,a,o,i,l,c,s,u,d,p,f,h,_,g,v,m,y,b=e(861),w=e(168),k=e(942),x=e(671),Z=e(144),M=e(340),P=e(215),C=e(120),O=e(757),j=e.n(O),E=e(392),D=e(959),R=e(458),B=e(845),A=(e(129),e(293)),S=e(65),T=n([S]);function L(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function X(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?L(Object(e),!0).forEach((function(t){(0,k.Z)(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):L(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function z(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}S=(T.then?(await T)():T)[0],(0,A.C)()?e.e(238).then(e.bind(e,543)):e.e(968).then(e.bind(e,971));var Y={},I=function(n){(0,M.Z)(O,n);var t,e,k=(t=O,e=z(),function(){var n,r=(0,C.Z)(t);if(e){var a=(0,C.Z)(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return(0,P.Z)(this,n)});function O(){var n;return(0,x.Z)(this,O),(n=k.call(this)).render3d=!1,n.details=!0,n}return(0,Z.Z)(O,[{key:"handleLocationHover",value:function(n){if(this.details){var t=this.shadowRoot.getElementById("info-box-wrapper");if(n.location&&n.position){var e=this.shadowRoot.getElementById("info-box-name"),r=this.shadowRoot.getElementById("map-wrapper");e.innerText=n.location.name.split(",")[0],Array.from(t.getElementsByClassName("info-field-value")).forEach((function(t,e){t.innerText=(Math.round(100*n.location.data[e])/100).toLocaleString()}));var a=r.getBoundingClientRect(),o=n.position[0]-a.x,i=n.position[1]-a.y,l=Math.min(Math.max(l,0),a.height);t.style.setProperty("--anchor-point",o/a.width*90+5+"%"),t.style.setProperty("--anchor-at-bottom",l>1.2*(t.clientHeight+12)?1:0),t.style.left=o+"px",t.style.top=i+"px",t.classList.add("visible");var c=t.getBoundingClientRect();c.x<4?(o=Math.max(o,8.5),i=Math.min(Math.max(i,.1*c.height),a.height-.1*c.height),t.style.setProperty("--anchor-point","0%"),t.style.setProperty("--anchor-at-bottom",i/a.height*.8+.1)):c.x+c.width+4>a.x+a.width?(o=Math.min(o,a.width-8.5),i=Math.min(Math.max(i,.1*c.height),a.height-.1*c.height),t.style.setProperty("--anchor-point","100%"),t.style.setProperty("--anchor-at-bottom",i/a.height*.8+.1)):(i=Math.min(Math.max(i,0),a.height),t.style.setProperty("--anchor-point",o/a.width*90+5+"%"),t.style.setProperty("--anchor-at-bottom",i>1.2*(c.height+12)?1:0)),t.style.left=o+"px",t.style.top=i+"px",t.current_location=location}else{var s=this.shadowRoot.getElementById("info-box-wrapper");s.classList.remove("visible"),s.current_location=null}}}},{key:"handleScroll",value:function(n){if(n.preventDefault(),0!=n.deltaY){var t=this.shadowRoot.getElementById("map-backend"),e=t.scale;n.deltaY<0?e*=Math.pow(1.001,-n.deltaY):e*=Math.pow(.999,n.deltaY);var r=(e=Math.min(Math.max(.5,e),30))/t.scale,a=t.center,o=t.clientPosToMapPos([n.clientX,n.clientY]),i=[(o[0]-a[0])*(1-1/r),(o[1]-a[1])*(1-1/r)],l=[a[0]+i[0],a[1]+i[1]];t.setCenterAndScale(l,e)}}},{key:"handleDragStart",value:function(n){n.preventDefault();var t=this.shadowRoot.getElementById("map-wrapper");this.last_drag_pos=[n.clientX,n.clientY],t.onmouseup=this.handleDragEnd.bind(this),t.onmouseleave=this.handleDragEnd.bind(this),t.onmousemove=this.handleDragMove.bind(this),t.style.cursor="grabbing"}},{key:"handleDragMove",value:function(n){n.preventDefault();var t=this.shadowRoot.getElementById("map-backend"),e=t.clientPosToMapPos(this.last_drag_pos);this.last_drag_pos=[n.clientX,n.clientY];var r=t.clientPosToMapPos([n.clientX,n.clientY]),a=[r[0]-e[0],r[1]-e[1]],o=[t.center[0]-a[0],t.center[1]-a[1]];t.setCenterAndScale(o,t.scale)}},{key:"handleDragEnd",value:function(n){n.preventDefault();var t=this.shadowRoot.getElementById("map-wrapper");t.onmouseup=null,t.onmouseleave=null,t.onmousemove=null,t.style.cursor=null}},{key:"handleTouchStart",value:function(n){if(n.preventDefault(),(2==n.touches.length||1==n.touches.length)&&(this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,t){return[n[0]+t[0],n[1]+t[1]]})).map((function(t){return t/n.touches.length})),2==n.touches.length)){var t=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],e=[t[0][0]-t[1][0],t[0][1]-t[1][1]];this.touch_dist=e[0]*e[0]+e[1]*e[1]}}},{key:"handleTouchMove",value:function(n){if(n.preventDefault(),2==n.touches.length||1==n.touches.length){var t=this.shadowRoot.getElementById("map-backend"),e=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,t){return[n[0]+t[0],n[1]+t[1]]})).map((function(t){return t/n.touches.length})),r=t.clientPosToMapPos(this.avg_touch_pos);this.avg_touch_pos=e;var a=t.clientPosToMapPos([e[0],e[1]]),o=[a[0]-r[0],a[1]-r[1]],i=[t.center[0]-o[0],t.center[1]-o[1]],l=t.scale;if(2==n.touches.length){var c=[[n.touches[0].clientX,n.touches[0].clientY],[n.touches[1].clientX,n.touches[1].clientY]],s=[c[0][0]-c[1][0],c[0][1]-c[1][1]],u=s[0]*s[0]+s[1]*s[1];if(0!==this.touch_dist&&0!==u){l*=u/this.touch_dist,this.touch_dist=u;var d=(l=Math.min(Math.max(.5,l),30))/t.scale,p=t.clientPosToMapPos(e),f=[(p[0]-i[0])*(1-1/d),(p[1]-i[1])*(1-1/d)];i[0]+=f[0],i[1]+=f[1]}}t.setCenterAndScale(i,l)}}},{key:"handleTouchEnd",value:function(n){n.preventDefault(),this.avg_touch_pos=Array.from(n.touches).map((function(n){return[n.clientX,n.clientY]})).reduce((function(n,t){return[n[0]+t[0],n[1]+t[1]]})).map((function(t){return t/n.touches.length}))}},{key:"handleOptionChange",value:function(n){var t=n.target.value;this.data=X(X(X({},this.data),this.data.options[t]),{},{option_selected:t})}},{key:"handleDetailsChange",value:function(n){this.details=n.target.checked}},{key:"handle3dChange",value:function(n){this.render3d=n.target.checked}},{key:"drawMap",value:function(n,t,e){var i=n.filter((function(n){return n})).map((function(n,r){return X(X({},n),{},{color:t[r],data:e.data[r],columns:e.columns})}));return 0==i.length?(0,E.dy)(r||(r=(0,w.Z)(['<div class="no-data">No data</div>']))):(0,B.F)(this.render3d?(0,E.dy)(a||(a=(0,w.Z)(['\n                    <map-backend-3d\n                        id="map-backend"\n                        .locations="','"\n                        @hover="','"\n                    ></map-backend-3d>'])),i,this.handleLocationHover):(0,E.dy)(o||(o=(0,w.Z)(['\n                    <map-backend\n                        id="map-backend"\n                        .locations="','"\n                        @hover="','"\n                    ></map-backend>'])),i,this.handleLocationHover))}},{key:"render",value:function(){var n=this;try{var t,e=this.data;if((null==e||null===(t=e.locations)||void 0===t?void 0:t.length)>0){var r,a;e.title&&(document.title=e.title);var o,y=e.data.map((function(n){return e.color_using?e.color_using.map((function(t){return n[t]})):n})),k=O.parseColor(e.defcolor||"#ffffff");if((null==y||null===(r=y[0])||void 0===r?void 0:r.length)>0){var x=y.reduce((function(n,t){return n.map((function(n,e){return Math.max(n,t[e])}))})),Z=y.reduce((function(n,t){return n.map((function(n,e){return Math.min(n,t[e])}))}));o=y.map((function(n){if(1==n.length){var t=O.parseColor(e.colors[0]),r=O.colorPropScale((0,A.U)(n[0],Z[0],x[0],0,1));return O.blendColors([t,k],[r,1-r])}var a=n.reduce((function(n,t){return n+t})),o=e.colors.map((function(n){return O.parseColor(n)})),i=n.map((function(n){return 0!==a?n/a:1}));return O.blendColors(o,i)}))}else o=e.locations.map((function(){return k}));var M=y.reduce((function(n,t){return n.map((function(n,e){return Math.min(n,t[e])}))})),P=y.reduce((function(n,t){return n.map((function(n,e){return Math.max(n,t[e])}))})),C=O.getCachedLocations(e.locations);return(0,E.dy)(i||(i=(0,w.Z)(['\n                    <div id="map-renderer-root">\n                        <div\n                            id="map-wrapper"\n                            @wheel="','"\n                            @mousedown="','"\n                            @touchstart="','"\n                            @touchmove="','"\n                            @touchend="','"\n                        >\n                            ',"\n                            ",'\n                        </div>\n                        <div class="title">','</div>\n                        <div id="option-box">\n                            <div>\n                                <input type="checkbox" id="details" ?checked='," @change=",'>\n                                <label for="details">Details</label>\n                            </div>\n                            ','\n                        </div>\n                        <div id="map-legend">\n                            <div class="current-legend">\n                            ',"\n                            </div>\n                            ","\n                        </div>\n                    </div>\n                "])),this.handleScroll,this.handleDragStart,this.handleTouchStart,this.handleTouchMove,this.handleTouchEnd,this.details?(0,E.dy)(l||(l=(0,w.Z)(['\n                                    <div id="info-box-wrapper">\n                                        <div id="info-box-background"></div>\n                                        <div id="info-box">\n                                            <div id="info-box-name"></div>\n                                            <hr />\n                                            <div class="info-field">\n                                                ',"\n                                            </div>\n                                        </div>\n                                    </div>"])),e.columns.map((function(n){return(0,E.dy)(c||(c=(0,w.Z)(['\n                                                    <span class="info-field-name">','</span>\n                                                    <span class="info-field-value"></span>\n                                                '])),n)}))):(0,E.dy)(s||(s=(0,w.Z)([""]))),C.includes(null)?(0,R.C)((0,b.Z)(j().mark((function t(){return j().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=n,t.next=3,O.getLocations(e.locations);case 3:return t.t1=t.sent,t.t2=o,t.t3=e,t.abrupt("return",t.t0.drawMap.call(t.t0,t.t1,t.t2,t.t3));case 7:case"end":return t.stop()}}),t)})))(),(0,E.dy)(u||(u=(0,w.Z)(["<ui-spinner></ui-spinner>"])))):this.drawMap(C,o,e),e.title,this.details,this.handleDetailsChange,this.data.allow_3d&&(0,A.C)()?(0,E.dy)(d||(d=(0,w.Z)(['\n                                    <div>\n                                        <input type="checkbox" id="render3d" ?checked='," @change=",'>\n                                        <label for="render3d">3D</label>\n                                    </div>'])),this.render3d,this.handle3dChange):(0,E.dy)(p||(p=(0,w.Z)([""]))),(null==y||null===(a=y[0])||void 0===a?void 0:a.length)>1?e.colors.map((function(n,t){return(0,E.dy)(f||(f=(0,w.Z)(['\n                                        <div class="legend-item">\n                                            <span class="color-block" style="','"></span>\n                                            <span class="legend-label">',"</span>\n                                        </div>\n                                    "])),(0,D.V)({background:n}),e.color_using?e.columns[e.color_using[t]]:e.color_using[t])})):e.colors.length>=1?(0,E.dy)(h||(h=(0,w.Z)(['\n                                            <div class="legend-item">\n                                                ','\n                                                <span class="color-gradiant">\n                                                    <span>','</span>\n                                                    <span class="scale" style="','"></span>\n                                                    <span>',"</span>\n                                                </span>\n                                            </div>\n                                        "])),e.options?null:(0,E.dy)(_||(_=(0,w.Z)(['\n                                                            <span class="legend-label">',"</span>\n                                                        "])),e.color_using?e.columns[e.color_using[0]]:e.color_using[0]),(Math.round(100*P[0])/100).toLocaleString(),(0,D.V)({background:"linear-gradient(".concat(e.colors[0],",").concat(e.defcolor,")")}),(Math.round(100*M[0])/100).toLocaleString()):null,e.options?(0,E.dy)(g||(g=(0,w.Z)(['\n                                    <select\n                                        class="select-option"\n                                        @change="','"\n                                    >',"</select>\n                                "])),this.handleOptionChange,e.options.map((function(n,t){return(0,E.dy)(v||(v=(0,w.Z)(['\n                                            <option\n                                                value="','"\n                                                ?selected="','"\n                                            >',"</option>\n                                        "])),t,t==e.option_selected,n.name)}))):null)}throw"No data"}catch(n){return(0,E.dy)(m||(m=(0,w.Z)(['\n                <div id="map-renderer-root">\n                    <div class="no-data">No data</div>\n                </div>\n            '])))}}}],[{key:"properties",get:function(){return{data:{type:Object},render3d:{state:!0},details:{state:!0}}}},{key:"styles",get:function(){return(0,E.iv)(y||(y=(0,w.Z)(["\n            * {\n                box-sizing: border-box;\n            }\n            :host {\n                width: 100%;\n                height: 100%;\n                display: block;\n                overflow: hidden;\n            }\n            div#map-renderer-root {\n                width: 100%;\n                height: 100%;\n                overflow: hidden;\n                position: relative;\n                color: white;\n                --background: var(--background-dark);\n                background: var(--background);\n                display: flex;\n                align-items: center;\n                justify-content: center;\n            }\n            div#map-wrapper {\n                position: relative;\n                width: 100%;\n                height: 100%;\n                max-width: 100%;\n                max-height: 100%;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                will-change: cursor;\n            }\n            div#info-box-wrapper {\n                --anchor-point: 50%;\n                --anchor-at-bottom: 0;\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: 100;\n                transform: translate(\n                    calc(var(--anchor-point) * -1),\n                    calc(var(--anchor-at-bottom) * (-100% - 8.5px) + (1 - var(--anchor-at-bottom)) * 8.5px));\n                display: none;\n                pointer-events: none;\n                will-change: transform, top, left;\n            }\n            div#info-box-wrapper.visible {\n                display: block;\n            }\n            div#info-box {\n                padding: 0.5rem;\n                font-size: 0.9rem;\n                font-family: Roboto, sans-serif;\n                color: black;\n                display: block;\n                width: max-content;\n                height: max-content;\n                max-width: 15rem;\n                min-width: 200px;\n                width: 100%;\n            }\n            div#info-box-name {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            div#info-box-background {\n                display: block;\n                position: absolute;\n                background: var(--background-light);\n                width: 100%;\n                height: 100%;\n                border-radius: 4px;\n                opacity: 0.85;\n                z-index: -1;\n            }\n            div#info-box-background::before {\n                content: '';\n                box-shadow: var(--shadow-small);\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                border-radius: 4px;\n            }\n            div#info-box-background::after {\n                content: '';\n                position: absolute;\n                width: 12px;\n                height: 12px;\n                top: calc(var(--anchor-at-bottom) * 100%);\n                left: var(--anchor-point);\n                transform: translate(-50%, -50%) rotate(45deg);\n                background: var(--background-light);\n                will-change: top, left\n            }\n            div.info-field {\n                display: grid;\n                grid-template-columns: auto auto;\n            }\n            span.info-field-name {\n                padding-right: 1rem;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            span.info-field-value {\n                display: flex;\n                align-items: center;\n                justify-content: flex-end;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n            hr {\n                border: 1px solid var(--secondary);\n            }\n            div.title {\n                flex: 0 0 auto;\n                font-size: 1.2rem;\n                padding: 1rem 0 0 1rem;\n                font-family: Roboto, sans-serif;\n                position: absolute;\n                z-index: 10;\n                left: 0;\n                top: 0;\n                pointer-events: none;\n            }\n            div#map-legend {\n                z-index: 9;\n                position: absolute;\n                padding: 0 1rem 1rem 0;\n                bottom: 0;\n                right: 0;\n                font-size: 0.85rem;\n                font-family: Roboto, sans-serif;\n                display: flex;\n                flex-flow: column;\n                pointer-events: none;\n                align-items: flex-end;\n            }\n            div.current-legend {\n                display: flex;\n                flex-flow: column;\n                text-align: right;\n                padding: 0.5rem;\n                text-shadow: black 0px 0px 10px;\n            }\n            div.current-legend .legend-item {\n                display: flex;\n                flex-flow: row;\n                align-items: center;\n                justify-content: flex-start;\n            }\n            div.current-legend .color-block {\n                margin: 0 0.5rem;\n            }\n            div.current-legend .color-gradiant {\n                margin-left: 0.5rem;\n            }\n            select.select-option {\n                pointer-events: all;\n                appearance: none;\n                background: var(--background-darkish);\n                color: white;\n                border: none;\n                padding: 0.35rem;\n                border-radius: 4px;\n                text-align: center;\n                text-align-last: center;\n            }\n            select.select-option:hover {\n                cursor: pointer;\n            }\n            span.color-gradiant {\n                display: flex;\n                flex-flow: column;\n                align-items: center;\n            }\n            span.color-gradiant span.scale {\n                display: block;\n                height: 5rem;\n                width: 0.65rem;\n                box-shadow: var(--shadow-small);\n                margin-top: 0.25rem;\n                margin-bottom: 0.25rem;\n            }\n            span.color-block {\n                display: block;\n                height: 0.5rem;\n                width: 0.5rem;\n                box-shadow: var(--shadow-small);\n            }\n            div.no-data {\n                font-family: Roboto, sans-serif;\n                font-weight: 600;\n                font-size: 2rem; \n                white-space: nowrap;\n                text-transform: uppercase;\n            }\n            #option-box {\n                position: absolute;\n                left: 0.5rem;\n                bottom: 0.5rem;\n                display: flex;\n                flex-flow: column;\n            }\n            #option-box div {\n                padding: 0.25rem;\n                text-shadow: black 0px 0px 10px;\n            }\n        "])))}},{key:"parseColor",value:function(n){var t=n.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);return t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:[255,255,255]}},{key:"blendColors",value:function(n,t){var e=[0,0,0],r=t.reduce((function(n,t){return n+t}),0);return 0===r?n[0]||e:(n.forEach((function(n,r){return e.forEach((function(a,o){return e[o]+=n[o]*n[o]*t[r]}))})),e.map((function(n){return Math.sqrt(n/r)})))}},{key:"colorPropScale",value:function(n){return Math.log10(99*n+1)/2}},{key:"getCachedLocations",value:function(n){return n.map((function(n){return n in Y?Y[n]:null}))}},{key:"getLocations",value:function(n){return Promise.all(n.map(function(){var n=(0,b.Z)(j().mark((function n(t){var e,r,a;return j().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!t){n.next=25;break}if(Y[t]){n.next=22;break}return n.prev=2,n.next=5,fetch("".concat("./static/data","/").concat(t,".bin"));case 5:if(!(e=n.sent).ok){n.next=16;break}return n.t0=Uint8Array,n.next=10,e.arrayBuffer();case 10:n.t1=n.sent,r=new n.t0(n.t1),a=S.w9.parse_location_data(r),Y[t]={id:t,name:a.name,raw:a},n.next=17;break;case 16:Y[t]=null;case 17:n.next=22;break;case 19:return n.prev=19,n.t2=n.catch(2),n.abrupt("return",null);case 22:return n.abrupt("return",Y[t]);case 25:return n.abrupt("return",null);case 26:case"end":return n.stop()}}),n,null,[[2,19]])})));return function(t){return n.apply(this,arguments)}}()))}}]),O}(E.oi);customElements.define("map-renderer",I),t()}catch(H){t(H)}}))},129:(n,t,e)=>{var r,a,o,i,l=e(982),c=e(168),s=e(671),u=e(144),d=e(340),p=e(215),f=e(120),h=e(392);var _=function(n){(0,d.Z)(g,n);var t,e,_=(t=g,e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}(),function(){var n,r=(0,f.Z)(t);if(e){var a=(0,f.Z)(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return(0,p.Z)(this,n)});function g(){return(0,s.Z)(this,g),_.apply(this,arguments)}return(0,u.Z)(g,[{key:"render",value:function(){return(0,h.dy)(r||(r=(0,c.Z)(['\n            <span class="ui-spinner">\n                ',"\n            </span>\n        "])),(0,l.Z)(Array(10).keys()).map((function(){return(0,h.dy)(a||(a=(0,c.Z)(["<span></span>"])))})))}}],[{key:"styles",get:function(){return(0,h.iv)(o||(o=(0,c.Z)(["\n            span.ui-spinner {\n                width: 5rem;\n                height: 5rem;\n                max-width: 100%;\n                max-height: 100%;\n                position: relative;\n                display: block;\n            }\n            span.ui-spinner span {\n                display: block;\n                position: absolute;\n                background: var(--primary);\n                border-radius: 50%;\n            }\n            @keyframes ui-spinner-keyframes {\n                0% {\n                    transform: rotate(0deg);\n                }\n                100% {\n                    transform: rotate(360deg);\n                }\n            }\n            ","\n        "])),(0,h.$m)((0,l.Z)(Array(10).keys()).map((function(n){return(0,h.iv)(i||(i=(0,c.Z)(["\n                span.ui-spinner span:nth-child(",") {\n                    animation: 1s calc(0.02s * ",") ease-in-out infinite ui-spinner-keyframes;\n                    width: calc(25% - 1% * ",");\n                    height: calc(25% - 1% * ",");\n                    top: calc(50% - (25% - 1% * ",") / 2);\n                    left: 0%;\n                    transform-origin: "," 50%;\n                }\n            "])),(0,h.$m)(n+1),(0,h.$m)(n+1),(0,h.$m)(n+1),(0,h.$m)(n+1),(0,h.$m)(n+1),(0,h.$m)(5e3/(25-1*(n+1))+"%"))})).join("")))}}]),g}(h.oi);customElements.define("ui-spinner",_)},293:(n,t,e)=>{function r(n,t,e,r,a){return t===e?a:n<t?r:n>e?a:(n-t)/(e-t)*(a-r)+r}function a(){try{var n=document.createElement("canvas"),t=n.getContext("webgl")||n.getContext("experimental-webgl");return t&&t.getExtension("OES_element_index_uint")}catch(n){return!1}}e.d(t,{C:()=>a,U:()=>r})},530:(n,t,e)=>{e.a(n,(async(r,a)=>{try{var o,i=r([o=e(65)]),[o]=i.then?(await i)():i;await e.v(t,n.id,"35d97cd45204c23e2b58",{"./index_bg.js":{__wbindgen_memory:o.oH,__wbg_buffer_5e74a88a1424a2e0:o.rf,__wbg_newwithbyteoffsetandlength_ad2916c6fa7d4c6f:o.HK,__wbindgen_object_drop_ref:o.ug,__wbg_newwithbyteoffsetandlength_f6c2c5e40f6f5bda:o.MC,__wbindgen_throw:o.Or}}),a()}catch(n){a(n)}}),1)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,